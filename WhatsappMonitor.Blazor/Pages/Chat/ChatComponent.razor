@page "/chatComponent"

@using WhatsappMonitor.Shared.Models
@inject IJSRuntime JSRuntime

<p>@ScrollTop</p>
<p>@MessageCount</p>
<p>@MaxSize</p>

<ul class="scrollable-chat-list" id="scroll-list" style="padding-left: 0px;" @onscroll="@OnScroll">
@foreach (var chat in chats)
{
<li class="list-group-item short-padding li-hoverable">
   <div class="form-row">
        <div class="col-2 no-margin-td">
           <p class="no-margin-td">@chat.PersonName</p>
       </div>
       <div class="col-2 no-margin-td">
           <p class="no-margin-td">@chat.MessageTime</p>
       </div>
       <div class="col-8 no-margin-td">
           <p class="no-margin-td">@chat.Message</p>
       </div>
   </div>
</li>
}
</ul>

@code {
    [Parameter]
    public List<ChatMessage> chats {get;set;}

public int ScrollTop { get; set; }    
public int MessageCount {get;set; }
public int MaxSize {get;set; }

      private async Task OnScroll(EventArgs e)
   {
      MaxSize = await MaxScrollHeight();
      ScrollTop = await GetScroll();

      if(ScrollTop > (MaxSize - 250)){
          var tempChat = chats;
          //chats.AddRange(tempChat);
          chats.InsertRange(0, tempChat);
          
          ScrollTop = await GetScroll();
      }

      MessageCount = chats.Count();


      
   }

private async Task<int> GetScroll()
{
    return await JSRuntime.InvokeAsync<int>("getScrollToTop", "#scroll-list");
}     

private async Task<int> MaxScrollHeight()
{
    return await JSRuntime.InvokeAsync<int>("getMaxScrollHeight", "#scroll-list");
}

   
}