@page "/chatSearcher"
@inject Services.ApiService apiServices
@using WhatsappMonitor.Shared.Models

<br/>

<div class="form-row">
    <div class="col-md-4">
        <input type="text" class="form-control" placeholder="Seach for a word" @bind="search">
    </div>
    <div class="col-md-2">
        <button class="btn btn-primary form-control" @onclick="SearchChat">Search</button>
    </div>
</div>

<hr>

@if(chats != null && loading == false)
{
@if(chats.Count()> 0){
<ul class="scrollable-chat-list" id="scroll-list" style="padding-left: 0px;">
@foreach (var chat in chats)
{
<li class="list-group-item short-padding li-hoverable">
   <div class="form-row">
        <div class="col-2 no-margin-td">
           <p class="no-margin-td">@chat.PersonName</p>
       </div>
       <div class="col-2 no-margin-td">
           <p class="no-margin-td">@chat.MessageTime</p>
       </div>
       <div class="col-8 no-margin-td">
           <p class="no-margin-td">@chat.Message</p>
       </div>
   </div>
</li>
}
</ul>} else {
    <p>Nothing found</p>
}
} else if(loading == true) {
    <p>Loading...</p>
} 

@code {
    [Parameter]
    public int Id { get; set; }
    List<ChatMessage> chats;
    string search = "";
    bool loading = false;

    public async Task SearchChat()
    {
        if (!string.IsNullOrWhiteSpace(search))
        {
        loading = true;
        chats = await apiServices.SearchChatWord(Id, search);
        loading = false;
        }
    }
     
}