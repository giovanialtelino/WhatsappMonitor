@page "/user/{entityId}"

@using System.IO;
@inject Services.ApiService apiServices
@using WhatsappMonitor.Shared.Models
@using WhatsappMonitor.Blazor.Pages.Chat

@if(entity == null)
{
    <p><em>Loading...</em></p>
}
else
{
     <div style="justify-content: center;" class="form-row">
        <h2>@entity.Name</h2>
    </div>
    <hr />

    <div style="justify-content: center;" class="form-row">
        <div class="form-group col-md-2">
            <button type="button" class="btn btn-primary" @onclick="(() => ChangeSelected(0))">Chat Info</button>
        </div>
        <div class="form-group col-md-2">
            <button type="button" class="btn btn-primary" @onclick="(() => ChangeSelected(1))">Chat Reader</button>
        </div>
        <div class="form-group col-md-2">
            <button type="button" class="btn btn-primary" @onclick="(() => ChangeSelected(2))">Chat Searcher</button>
        </div>
        <div class="form-group col-md-2">
            <button type="button" class="btn btn-primary" @onclick="(() => ChangeSelected(3))">Chat
                Participants</button>
        </div>
        <div class="form-group col-md-2">
            <button type="button" class="btn btn-primary" @onclick="(() => ChangeSelected(4))">Upload Chats</button>
        </div>
    </div>
}

<hr />

@if(selected == -1)
{
}
else if(selected == 0)
{
    <ChatInfo
    Id = "@entity.EntityId" />
}
else if(selected == 1)
{
    <ChatReader
    Id = "@entity.EntityId" />
}
else if(selected == 2)
{
    <ChatSeacher
    Id = "@entity.EntityId" />
}
else if(selected == 3)
{
    <Participants
    Id = "@entity.EntityId" />
}
else if(selected == 4)
{
    <Upload
    Id = "@entity.EntityId" />
    <BeingUploaded
    Id = "@entity.EntityId" />
    <UploadDates
    Id = "@entity.EntityId" />
}
 
@code{
    [Parameter]
    public String entityId { get; set; }
    public Entity entity { get; set; }
    public int selected {get;set;}

    protected override async Task OnInitializedAsync()
    {
        selected = -1;
        await GetUser();
    }
    public async Task GetUser()
    {
        entity = await apiServices.GetEntityByIdAsync(entityId);
    }

    public void ChangeSelected(int i)
    {
        selected = i;
    }
}